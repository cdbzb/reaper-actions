import beyond.Reaperimport sysfrom rs_statemanager import RSStateManagersys.argv=["Main"]import tkinterfrom tkinter import ttk############## code here ###################	######### class ############################class ReaColors():	def __init__(self, root):		RSStateManager.appname = "ReaColors"		####################################		self.root = root		self.root.title('Track Color')#		self.root.wm_attributes("-topmost", 1)#		self.root.attributes("-alpha",0.75)#		self.root.overridedirect(0)		btnwidth=5		####### track color blue button #################################		self.btnblue = tkinter.Button(self.root, text='Blue', width=btnwidth, bd=4, activebackground="#324D82")		self.btnblue.bind('<Button-1>', lambda event: self.drawtrackblue())		self.btnblue.grid(row=1, column=0, pady=0, padx=0)		####### track color green button #################################		self.btngreen = tkinter.Button(self.root,  text='Green', width=btnwidth)		self.btngreen.bind('<Button-1>', lambda event: self.drawtrackgreen())		self.btngreen.grid(row=1, column=1, pady=0, padx=0)		####### track color red button #################################		self.btnred = tkinter.Button(self.root,  text='Red', width=btnwidth)		self.btnred.bind('<Button-1>', lambda event: self.drawtrackred())		self.btnred.grid(row=1, column=2, pady=0, padx=0)		####### track color grey button #################################		self.btngrey = tkinter.Button(self.root,  text='Grey', width=btnwidth)		self.btngrey.bind('<Button-1>', lambda event: self.drawtrackgrey())		self.btngrey.grid(row=1, column=3, pady=0, padx=0)		####### track color gold button #################################		self.btngrey = tkinter.Button(self.root,  text='Gold', width=btnwidth)		self.btngrey.bind('<Button-1>', lambda event: self.drawtrackgold())		self.btngrey.grid(row=1, column=4, pady=0, padx=0)		####### track color brawn button #################################		self.btngrey = tkinter.Button(self.root,  text='Brawn', width=btnwidth)		self.btngrey.bind('<Button-1>', lambda event: self.drawtrackbrawn())		self.btngrey.grid(row=1, column=5, pady=0, padx=0)		####### track color orange button #################################		self.btngrey = tkinter.Button(self.root,  text='Orange', width=btnwidth)		self.btngrey.bind('<Button-1>', lambda event: self.drawtrackorange())		self.btngrey.grid(row=1, column=6, pady=0, padx=0)		####### track color white button #################################		self.btngrey = tkinter.Button(self.root,  text='White', width=btnwidth)		self.btngrey.bind('<Button-1>', lambda event: self.drawtrackwhite())		self.btngrey.grid(row=1, column=7, pady=0, padx=0)		####### track color yellow button #################################		self.btngrey = tkinter.Button(self.root,  text='Yellow', width=btnwidth)		self.btngrey.bind('<Button-1>', lambda event: self.drawtrackyellow())		self.btngrey.grid(row=1, column=8, pady=0, padx=0)		####### close button		self.btngrey = tkinter.Button(self.root,  text='x', width=1)		self.btngrey.bind('<Button-1>', lambda event: self.close())		self.btngrey.grid(row=1, column=9, pady=0, padx=0)		####### Window settings #########################		w = 650		h = 28		sw = self.root.winfo_screenwidth()		sh = self.root.winfo_screenheight()		x = (sw - w)/2		y = (sh - h)/2		self.root.geometry('%dx%d+%d+%d' % (w, h, 0, 42))		self.root.resizable(width=0, height=0)		style = ttk.Style()		style.theme_use('classic')	###################blue############################	def drawtrackblue(self):		Reaper.OnConnectExecute = "from sws_python import *"		with Reaper:			SelCount = Reaper.CountSelectedTracks(0)			for n in range (0, SelCount):				track = Reaper.GetSelectedTrack(0, n)				TrackColor = Reaper.SetTrackColor(track, 0x00324D82)	###############################################	def drawtrackgreen(self):		Reaper.OnConnectExecute = "from sws_python import *"		with Reaper:			SelCount = Reaper.CountSelectedTracks(0)			for n in range (0, SelCount):				track = Reaper.GetSelectedTrack(0, n)				TrackColor = Reaper.SetTrackColor(track, 0x00318324)	###############################################	def drawtrackred(self):		Reaper.OnConnectExecute = "from sws_python import *"		with Reaper:			SelCount = Reaper.CountSelectedTracks(0)			for n in range (0, SelCount):				track = Reaper.GetSelectedTrack(0, n)				TrackColor = Reaper.SetTrackColor(track, 0x00950103)	###############################################	def drawtrackgrey(self):		Reaper.OnConnectExecute = "from sws_python import *"		with Reaper:			SelCount = Reaper.CountSelectedTracks(0)			for n in range (0, SelCount):				track = Reaper.GetSelectedTrack(0, n)				TrackColor = Reaper.SetTrackColor(track, 0x007E7E7E)	###############################################	def drawtrackgold(self):		Reaper.OnConnectExecute = "from sws_python import *"		with Reaper:			SelCount = Reaper.CountSelectedTracks(0)			for n in range (0, SelCount):				track = Reaper.GetSelectedTrack(0, n)				TrackColor = Reaper.SetTrackColor(track, 0x00daa520)	###############################################	def drawtrackbrawn(self):		Reaper.OnConnectExecute = "from sws_python import *"		with Reaper:			SelCount = Reaper.CountSelectedTracks(0)			for n in range (0, SelCount):				track = Reaper.GetSelectedTrack(0, n)				TrackColor = Reaper.SetTrackColor(track, 0x00996633)	###############################################	def drawtrackorange(self):		Reaper.OnConnectExecute = "from sws_python import *"		with Reaper:			SelCount = Reaper.CountSelectedTracks(0)			for n in range (0, SelCount):				track = Reaper.GetSelectedTrack(0, n)				TrackColor = Reaper.SetTrackColor(track, 0x00FF7F00)	###############################################	def drawtrackwhite(self):		Reaper.OnConnectExecute = "from sws_python import *"		with Reaper:			SelCount = Reaper.CountSelectedTracks(0)			for n in range (0, SelCount):				track = Reaper.GetSelectedTrack(0, n)				TrackColor = Reaper.SetTrackColor(track, 0x00FFFFFF)	###############################################	def drawtrackyellow(self):		Reaper.OnConnectExecute = "from sws_python import *"		with Reaper:			SelCount = Reaper.CountSelectedTracks(0)			for n in range (0, SelCount):				track = Reaper.GetSelectedTrack(0, n)				TrackColor = Reaper.SetTrackColor(track, 0x00FFFF00)	###############################################	def close(self):		global root		self.root.destroy()	###############################################	@ProgramStartDirectdef Main():	root = tkinter.Tk()	root.attributes("-alpha",0.75)	root.wm_attributes("-topmost", 1)#	root.overrideredirect(1)	ReaColors(root)	root.mainloop()